package me.cooljwb.vulnerabilitypatcher.patches;

import java.util.logging.Logger;
import org.bukkit.block.Container;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockDispenseEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.inventory.ItemStack;

/*
 * Copyright 2019 CoolJWB
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @author CoolJWB
 */

public class Entity_Tag extends Patches implements Listener {

	private Logger log = Logger.getLogger("Minecraft");

	@EventHandler(priority = EventPriority.HIGHEST)
	public void onPlayerInteractEvent(PlayerInteractEvent event) {
		ItemStack item = event.getItem();

		if(isDangerousEgg(item)) {
			clearItemMeta(event.getItem());
			notifyViolation(event.getPlayer().getName(), "use", event.getItem().getType() + " with", event.getPlayer().getLocation());
		}

		debug(event);
	} // Checks modified Spawn Eggs.

	@EventHandler(priority = EventPriority.HIGHEST)
	public void onBlockDispenseEvent(BlockDispenseEvent event) {
		ItemStack item = event.getItem();

		if(item != null) {
			if (isDangerousEgg(item)) {
				event.setCancelled(true);
				Container container = (Container) event.getBlock().getState();

				for(int c = 0; c < container.getInventory().getSize(); c++) {
					if(container.getInventory().getItem(c) != null) {
						if (container.getInventory().getItem(c).isSimilar(event.getItem()))
							container.getInventory().getItem(c).setItemMeta(null);
					}
				}

				notifyViolation(event.getBlock().getType().name(), "use", "dangerous mob egg", event.getBlock().getLocation());
			}
		}

		debug(event);
	} // Checks if a block tried to dispense a modified Spawn Egg.
}
