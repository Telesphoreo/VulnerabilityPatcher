package me.cooljwb.vulnerabilitypatcher.patches;

import java.util.ArrayList;
import java.util.HashMap;
import me.cooljwb.vulnerabilitypatcher.SMG;
import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerSwapHandItemsEvent;
import org.bukkit.scheduler.BukkitScheduler;

/*
 * Copyright 2019 CoolJWB
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @author CoolJWB
 */

public class Handswitch extends Patches implements Listener {

    // This could need an update smh.

    private static HashMap<Player, Integer> switches = new HashMap<>();
    private static ArrayList<Player> cooldown = new ArrayList<>();
    private int its = 0;

    public void runnable() {
        BukkitScheduler scheduler = Bukkit.getServer().getScheduler();
        scheduler.scheduleSyncRepeatingTask(main, new Runnable() {
            @Override
            public void run() {
                switches.clear();
                its++;
                if(its >= 30) {
                    for(Player player : cooldown) {
                        msg(player, SMG.SWITCH.msg);
                    }

                    cooldown = new ArrayList<>();
                    its = 0;
                }
            }
        }, 20L, 0);
    } // Cooldown notification.

    @EventHandler(priority = EventPriority.HIGHEST)
    public void PlayerSwapHandItems(PlayerSwapHandItemsEvent event) {
        if(cooldown.contains(event.getPlayer())) {
            event.setCancelled(true);
        }

        if(!switches.containsKey(event.getPlayer())) {
            switches.put(event.getPlayer(), 1);
        }
        else {
            int playerSwitches = switches.get(event.getPlayer());

            if(playerSwitches > 3) {
                event.setCancelled(true);
                cooldown.add(event.getPlayer());
            }
            else {
                switches.put(event.getPlayer(), playerSwitches + 1);
            }
        }
    } // Item hand swap counter.
}
