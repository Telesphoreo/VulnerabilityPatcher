package me.cooljwb.vulnerabilitypatcher.modifiers;

import java.util.logging.Logger;
import org.bukkit.Bukkit;
import org.bukkit.entity.Arrow;
import org.bukkit.entity.Entity;
import org.bukkit.entity.Firework;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.SpawnEggMeta;
import org.bukkit.projectiles.ProjectileSource;

/*
 * Copyright 2019 CoolJWB
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @author CoolJWB
 */

public class NBTModifier {

    private Logger log = Logger.getLogger("Minecraft"); // Get the server logger.
    private NBTModifier_1_13_2 nbt_1_13_2 = new NBTModifier_1_13_2();
    private NBTModifier_1_14 nbt_1_14 = new NBTModifier_1_14();
    private NBTModifier_1_15 nbt_1_15 = new NBTModifier_1_15();
    private NBTModifier_1_16 nbt_1_16 = new NBTModifier_1_16();
    public static String getVersion() {
        switch(Bukkit.getVersion().substring((Bukkit.getVersion().indexOf(":") + 1), Bukkit.getVersion().indexOf(")")).trim()) {
            case "1.13.2":
                return "1.13.2";
            case "1.14":
            case "1.14.1":
            case "1.14.2":
            case "1.14.3":
            case "1.14.4":
                return "1.14";
            case "1.15":
            case "1.15.1":
            case "1.15.2":
                return "1.15";
            case "1.16":
            case "1.16.1":
            case "1.16.2":
                return "1.16";
            default:
                return "";
        }
    }

    protected String itemToString(ItemStack item) {
        switch(getVersion()) {
            case "1.13.2":
                return nbt_1_13_2.itemToString(item);
            case "1.14":
                return nbt_1_14.itemToString(item);
            case "1.15":
                return nbt_1_15.itemToString(item);
            case "1.16":
                return nbt_1_16.itemToString(item);
            default:
                return "";
        }
    }

    protected boolean removePlayerdata(String player) {
        switch(getVersion()) {
            case "1.13.2":
                return nbt_1_13_2.removePlayerdata(player);
            case "1.14":
                return nbt_1_14.removePlayerdata(player);
            case "1.15":
                return nbt_1_15.removePlayerdata(player);
            case "1.16":
                return nbt_1_16.removePlayerdata(player);
        }
        return false;
    }
    protected void resetMeta(Player player, ItemStack item, boolean mainhand) {
        switch(getVersion()) {
            case "1.13.2":
                nbt_1_13_2.resetMeta(player, item, mainhand);
                break;
            case "1.14":
                nbt_1_14.resetMeta(player, item, mainhand);
                break;
            case "1.15":
                nbt_1_15.resetMeta(player, item, mainhand);
                break;
            case "1.16":
                nbt_1_16.resetMeta(player, item, mainhand);
                break;
        }
    }
    protected boolean isPlayer(ProjectileSource source) {
        switch(getVersion()) {
            case "1.13.2":
                return nbt_1_13_2.isPlayer(source);
            case "1.14":
                return nbt_1_14.isPlayer(source);
            case "1.15":
                return nbt_1_15.isPlayer(source);
            case "1.16":
                return nbt_1_16.isPlayer(source);
            default:
                return false;
        }
    }
    protected double getArrowDamage(Arrow arrow) {
        switch(getVersion()) {
            case "1.13.2":
                return nbt_1_13_2.getArrowDamage(arrow);
            case "1.14":
                return nbt_1_14.getArrowDamage(arrow);
            case "1.15":
                return nbt_1_15.getArrowDamage(arrow);
            case "1.16":
                return nbt_1_16.getArrowDamage(arrow);
            default:
                return 0;
        }
    }
    protected void setArrowDamage(Arrow arrow, double amount) {
        switch(getVersion()) {
            case "1.13.2":
                nbt_1_13_2.setArrowDamage(arrow, amount);
                break;
            case "1.14":
                nbt_1_14.setArrowDamage(arrow, amount);
                break;
            case "1.15":
                nbt_1_15.setArrowDamage(arrow, amount);
                break;
            case "1.16":
                nbt_1_16.setArrowDamage(arrow, amount);
                break;
        }
    }
    protected int getFireworkEffectSize(Firework firework) {
        switch(getVersion()) {
            case "1.13.2":
                return nbt_1_13_2.getFireworkEffectSize(firework);
            case "1.14":
                return nbt_1_14.getFireworkEffectSize(firework);
            case "1.15":
                return nbt_1_15.getFireworkEffectSize(firework);
            case "1.16":
                return nbt_1_16.getFireworkEffectSize(firework);
            default:
                return 0;
        }
    }
    protected boolean hasFireworkLargeEffect(Firework firework) {
        switch(getVersion()) {
            case "1.13.2":
                return nbt_1_13_2.hasFireworkLargeEffect(firework);
            case "1.14":
                return nbt_1_14.hasFireworkLargeEffect(firework);
            case "1.15":
                return nbt_1_15.hasFireworkLargeEffect(firework);
            case "1.16":
                return nbt_1_16.hasFireworkLargeEffect(firework);
            default:
                return false;
        }
    }

    public boolean isCrashItem(ItemStack item) {
        switch(getVersion()) {
            case "1.13.2":
                return nbt_1_13_2.isCrashItem(item);
            case "1.14":
                return nbt_1_14.isCrashItem(item);
            case "1.15":
                return nbt_1_15.isCrashItem(item);
            case "1.16":
                return nbt_1_16.isCrashItem(item);
            default:
                return false;
        }
    }
    public boolean containsCrashItem(ItemStack item) {
        switch(getVersion()) {
            case "1.13.2":
                return nbt_1_13_2.containsCrashItem(item);
            case "1.14":
                return nbt_1_14.containsCrashItem(item);
            case "1.15":
                return nbt_1_15.containsCrashItem(item);
            case "1.16":
                return nbt_1_16.containsCrashItem(item);
            default:
                return false;
        }
    }

    public boolean isDeathItem(ItemStack item) {
        switch(getVersion()) {
            case "1.13.2":
                return nbt_1_13_2.isDeathItem(item);
            case "1.14":
                return nbt_1_14.isDeathItem(item);
            case "1.15":
                return nbt_1_15.isDeathItem(item);
            case "1.16":
                return nbt_1_16.isDeathItem(item);
            default:
                return false;
        }
    }
    protected boolean containsDeathItem(ItemStack item) {
        switch(getVersion()) {
            case "1.13.2":
                return nbt_1_13_2.containsDeathItem(item);
            case "1.14":
                return nbt_1_14.containsDeathItem(item);
            case "1.15":
                return nbt_1_15.containsDeathItem(item);
            case "1.16":
                return nbt_1_16.containsDeathItem(item);
            default:
                return false;
        }
    }

    public boolean isDisconnectItem(Entity entity) {
        switch(getVersion()) {
            case "1.13.2":
                return nbt_1_13_2.isDisconnectItem(entity);
            case "1.14":
                return nbt_1_14.isDisconnectItem(entity);
            case "1.15":
                return nbt_1_15.isDisconnectItem(entity);
            case "1.16":
                return nbt_1_16.isDisconnectItem(entity);
            default:
                return false;
        }
    }
    public boolean isDisconnectItem(ItemStack item) {
        switch(getVersion()) {
            case "1.13.2":
                return nbt_1_13_2.isDisconnectItem(item);
            case "1.14":
                return nbt_1_14.isDisconnectItem(item);
            case "1.15":
                return nbt_1_15.isDisconnectItem(item);
            case "1.16":
                return nbt_1_16.isDisconnectItem(item);
            default:
                return false;
        }
    }
    public boolean containsDisconnectItem(ItemStack item) {
        switch(getVersion()) {
            case "1.13.2":
                return nbt_1_13_2.containsDisconnectItem(item);
            case "1.14":
                return nbt_1_14.containsDisconnectItem(item);
            case "1.15":
                return nbt_1_15.containsDisconnectItem(item);
            case "1.16":
                return nbt_1_16.containsDisconnectItem(item);
            default:
                return false;
        }
    }
    public void removeInvalidValues(Entity entity) {
        switch(getVersion()) {
            case "1.13.2":
                nbt_1_13_2.removeInvalidValues(entity);
                break;
            case "1.14":
                nbt_1_14.removeInvalidValues(entity);
                break;
            case "1.15":
                nbt_1_15.removeInvalidValues(entity);
                break;
            case "1.16":
                nbt_1_16.removeInvalidValues(entity);
                break;
        }
    }

    protected boolean isDangerousEgg(ItemStack item) {
        switch(getVersion()) {
            case "1.13.2":
                if(item != null && item.getType().name().equalsIgnoreCase("spawn_egg")) {
                    return true;
                }
                return nbt_1_13_2.isDangerousEgg(item);
            case "1.14":
                if(item != null && item.getItemMeta() instanceof SpawnEggMeta) {
                    return true;
                }
                return nbt_1_14.isDangerousEgg(item);
            case "1.15":
                if(item != null && item.getItemMeta() instanceof SpawnEggMeta) {
                    return true;
                }
                return nbt_1_15.isDangerousEgg(item);
            case "1.16":
                if(item != null && item.getItemMeta() instanceof SpawnEggMeta) {
                    return true;
                }
                return nbt_1_16.isDangerousEgg(item);
            default:
                return false;
        }
    }

    protected boolean isDangerousSkull(ItemStack item) {
        switch(getVersion()) {
            case "1.13.2":
                nbt_1_13_2.isDangerousSkull(item);
                break;
            case "1.14":
                nbt_1_14.isDangerousSkull(item);
                break;
            case "1.15":
                nbt_1_15.isDangerousSkull(item);
                break;
            case "1.16":
                nbt_1_16.isDangerousSkull(item);
                break;
        }
        return false;
    }
}
